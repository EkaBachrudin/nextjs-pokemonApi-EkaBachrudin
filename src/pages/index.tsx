import { Pagination } from '@/components/pagination'
import { PokemonList } from '@/components/pokemonList'
import { SearchPokemon } from '@/components/searchPokemon'
import Head from 'next/head'
import Image from 'next/image'
import { useEffect, useState } from 'react'
import { PokemonInterface } from 'types/pokemonType'

export default function Home() {
  const initialArray: any[] = []
  const [data, setData] = useState<any[]>(initialArray)
  const [isLoading, setLoading] = useState(false)
  const [offset, setOffset] = useState(0);
  const [limit, setLimit] = useState(40);

  const onPageChange = (currentOffset: any) => {
    load(currentOffset)
    setOffset(currentOffset)
  };

  const load = (currentOffset: any) => {
    setData([]);
    setLoading(true)
    fetch(`https://pokeapi.co/api/v2/pokemon?offset=${currentOffset}&limit=${limit}`)
      .then((res) => res.json())
      .then((res) => {
        let i: PokemonInterface[] = []
        res.results.map( (_: any) => {
          fetch(_.url).then((res) => res.json()).then((res) => {
            let getPokemonData: PokemonInterface = { name: _.name, url: _.url, svg: res.sprites.other.dream_world.front_default, species: res.species, stats:  res.stats, types: res.types}
            setData(initialArray => [...initialArray, getPokemonData]);
          })
        })
      })
      setLoading(false)
  }

  useEffect(() => {
   load(0)
  }, [])
  
    
  return (
    <>
      <Head>
        <title>Pokemon API | Eka Bachrudin</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
        <div className='flex flex-row items-center space-x-5 justify-center'>
              <Image alt="logo" src={"/images/pokeball.png"} width={70} height={70} />
              <div>
                <p>POKEMON API</p> <span className='text-xs'>By EKa Bachrudin</span>
              </div>
        </div>
      {data.length == 0 ? <div className='flex justify-center items-center '>Loading ...</div> : 
        <>
        
          <div className='lg:flex lg:space-y-0 justify-between space-y-2  mt-5 items-center lg:mx-16'>
            <Pagination
              limit={limit}
              offset={offset}
              onPageChange={onPageChange}
            />
            <SearchPokemon/>
          </div>
          
         <PokemonList result={data} />
        </>
      }
     
    </>
  )
}
